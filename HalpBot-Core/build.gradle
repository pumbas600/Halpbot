apply plugin: 'maven-publish'
apply plugin: 'signing'

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                afterEvaluate {
                    name = project.name
                    description = project.description
                    url = 'https://github.com/pumbas600'
                }

                organization {
                    name = 'Halpbot'
                    url = 'https://github.com/pumbas600'
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/pumbas600/Halpbot/blob/dev/LICENSE'
                        distribution = 'repo'
                    }
                }

                scm {
                    url = 'https://github.com/pumbas600/Halpbot'
                    connection = 'scm:git:git://https://github.com/pumbas600/Halpbot'
                    developerConnection = 'scm:git:git://https://github.com/pumbas600/Halpbot'
                }

                developers {
                    developer {
                        id = 'pumbas600'
                        name = 'Josh Jeffers'
                        email = 'joshjeffers600@gmail.com'
                    }
                }

                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/pumbas600/Halpbot/issues'
                }
            }
            versionMapping {
                usage('java-api') {
                    fromResolutionResult()
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }

    repositories {
        repositories {
            maven {
                name = 'ossrh'
                url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                credentials {
                    username = project.findProperty('ossrh.username')
                    password = project.findProperty('ossrh.password')
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


task copyPublications {
    doLast {
        final def version = projectVersion
        final def DIST_DEST_DIR = "$rootDir/halpbot-assembly/publications/$version"
        final def DIRT_SRC_DIR = "$buildDir/libs"
        final def POM_SRC_DIR = "$buildDir/publications/mavenJava"

        ant.mkdir(dir: DIST_DEST_DIR)
        ant.copy(todir: DIST_DEST_DIR) {
            fileset dir: DIRT_SRC_DIR,
                    includes: "$project.name-$version*"
        }

        file("$POM_SRC_DIR/pom-default.xml").renameTo(file("$POM_SRC_DIR/${project.name}.pom"))
        file("$POM_SRC_DIR/pom-default.xml.asc").renameTo(file("$POM_SRC_DIR/${project.name}.pom.asc"))

        ant.copy(todir: DIST_DEST_DIR) {
            fileset dir: POM_SRC_DIR,
                    includes: "${project.name}.pom**"
        }
    }
}

publishToMavenLocal.dependsOn generatePomFileForMavenJavaPublication
publishToMavenLocal.finalizedBy copyPublications

dependencies {
    implementation 'ch.qos.logback:logback-classic:1.2.10'
}
